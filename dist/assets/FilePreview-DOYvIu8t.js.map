{"version":3,"file":"FilePreview-DOYvIu8t.js","sources":["../../node_modules/simple-data-crypto-file-preview/main.js","../../src/views/FilePreview.vue"],"sourcesContent":["import {\r\n    crypt_context_create,\r\n    crypt_context_destroy,\r\n    decrypt_stream_init,\r\n    decrypt_stream,\r\n    decrypt_blob,\r\n    InputStream,\r\n} from 'simple-data-crypto/builder';\r\nimport { PlayMp4Video } from 'play-video-streamed';\r\nimport 'common-file-preview';\r\n\r\nexport class HTMLSimpleDataCryptoFilePreviewElement extends HTMLElement {\r\n    #shadow;\r\n    #preview;\r\n    #ctx;\r\n    #cleanup;\r\n\r\n    constructor() {\r\n        super();\r\n        this.#shadow = this.attachShadow({ mode: \"open\" });\r\n        this.#preview = document.createElement(\"common-file-preview\");\r\n        this.#shadow.appendChild(this.#preview);\r\n        const style = document.createElement(\"style\");\r\n        style.textContent = `\r\n            :host {\r\n                display: block;\r\n                box-sizing: border-box;\r\n                overflow: hidden;\r\n            }\r\n            common-file-preview, video {\r\n                width: 100%;\r\n                height: 100%;\r\n            }\r\n            common-file-preview {\r\n                overflow: auto;\r\n            }\r\n            video {\r\n                object-fit: contain;\r\n                background-color: #000;\r\n            }\r\n        `;\r\n        this.#shadow.appendChild(style);\r\n    }\r\n\r\n    connectedCallback() {\r\n\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        if (this.#ctx && this.#ctx !== true) {\r\n            crypt_context_destroy(this.#ctx);\r\n        }\r\n        if (this.#cleanup) {\r\n            this.#cleanup();\r\n        }\r\n    }\r\n\r\n    async load(fileReader, password, size, type, fileName) {\r\n        if (this.#ctx) {\r\n            throw new Error(\"already loaded\");\r\n        }\r\n        if (type !== \"video\") {\r\n            // 其他文件类型当成blob处理\r\n            const blob = new Blob([await fileReader(0, size)]);\r\n            const decryptedBlob = new Blob([await decrypt_blob(blob, password)], { type });\r\n            const url = URL.createObjectURL(decryptedBlob);\r\n            this.#preview.init(() => url, type, fileName);\r\n            this.#ctx = true;\r\n            this.#cleanup = () => {\r\n                URL.revokeObjectURL(url);\r\n            };\r\n            return;\r\n        }\r\n        // 处理视频\r\n        const np = document.createElement('video');\r\n        np.controls = true;\r\n        np.playsInline = true;\r\n        this.#preview.replaceWith(np);\r\n        this.#preview = np;\r\n        this.#ctx = await crypt_context_create(password);\r\n        const stream = new InputStream(fileReader, size);\r\n        await decrypt_stream_init(this.#ctx, stream, password);\r\n\r\n        this.#cleanup = await PlayMp4Video(np, (async (start, end, controller) => {\r\n            const buffer = await decrypt_stream(this.#ctx, start, end, controller);\r\n            return buffer;\r\n        }));\r\n    }\r\n}\r\n\r\ncustomElements.define(\"simple-data-crypto-file-preview\", HTMLSimpleDataCryptoFilePreviewElement);","<template>\r\n    <div class=\"file-preview\" @change=\"updateGuessedType\">\r\n        <div class=\"mode-selector\">\r\n            <label>\r\n                <input type=\"radio\" v-model=\"mode\" value=\"local\" /> 本地文件\r\n            </label>\r\n            <label>\r\n                <input type=\"radio\" v-model=\"mode\" value=\"remote\" /> 在线文件\r\n            </label>\r\n        </div>\r\n\r\n        <input v-if=\"mode === 'local'\" type=\"file\" ref=\"filebox\" />\r\n        <input v-if=\"mode === 'remote'\" type=\"text\" v-model=\"fileUrl\" placeholder=\"输入文件URL\" />\r\n        <input type=\"password\" v-model=\"password\" placeholder=\"输入解密密码\" @change.stop />\r\n        <select v-model=\"type\" @change.stop>\r\n            <option value=\"text/plain\">文本</option>\r\n            <option value=\"image\">图片</option>\r\n            <option value=\"video\">视频</option>\r\n            <option value=\"audio/mp3\">音频</option>\r\n            <option value=\"application/pdf\">PDF</option>\r\n            <option value=\"docx\">Microsoft Office 文档</option>\r\n        </select>\r\n        <button @click=\"doPreview\"\r\n            :disabled=\"(!fileUrl && mode === 'remote')\">预览</button>\r\n\r\n        <dialog style=\"width: 100%; height: 100%; display: flex; flex-direction: column; overflow: hidden;\" ref=\"dlg\"\r\n            @close=\"handleDialogClose\">\r\n            <simple-data-crypto-file-preview v-if=\"shouldCreate\" ref=\"preview\" style=\"flex: 1\"></simple-data-crypto-file-preview>\r\n            <button @click=\"closeDialog\" style=\"margin-top: 0.5em;\">关闭</button>\r\n        </dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport 'simple-data-crypto-file-preview'; // It is in https://github.com/shc0743/simple-data-crypto/raw/main/impl/JavaScript/util/simple-data-crypto-file-preview/simple-data-crypto-file-preview-1.0.0.tgz\r\nimport { version } from 'play-video-streamed';\r\nconsole.log('play-video-streamed version:', version());\r\nexport default {\r\n    data() {\r\n        return {\r\n            file: null,\r\n            fileUrl: '',\r\n            password: '',\r\n            mode: 'local',\r\n            type: 'text/plain',\r\n            shouldCreate: false,\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        guessFileType(fileName = '') {\r\n            if (!fileName) {\r\n                return 'text/plain';\r\n            }\r\n            if (fileName.endsWith('.enc')) {\r\n                fileName = fileName.slice(0, -4);\r\n            }\r\n            const ext = fileName.split('.').pop().toLowerCase();\r\n            switch (ext) {\r\n                case 'txt':\r\n                    return 'text/plain';\r\n                case 'jpg':\r\n                case 'jpeg':\r\n                case 'png':\r\n                case 'gif':\r\n                case 'bmp':\r\n                case 'webp':\r\n                    return 'image';\r\n                case 'mp4':\r\n                    return 'video';\r\n                case 'mp3':\r\n                case 'wav':\r\n                    return 'audio/' + ext;\r\n                case 'pdf':\r\n                    return 'application/pdf';\r\n                case 'docx':\r\n                    return 'docx';\r\n                default:\r\n                    return 'text/plain';\r\n            }\r\n        },\r\n        updateGuessedType() {\r\n            if (this.mode === 'local') {\r\n                this.type = this.guessFileType(this.$refs.filebox?.files?.[0]?.name);\r\n            } else if (this.mode === 'remote') try {\r\n                const url = new URL(this.fileUrl);\r\n                this.type = this.guessFileType(url.pathname);\r\n            } catch { }\r\n        },\r\n        async getFileSize(url) {\r\n            const abortController = new AbortController();\r\n            const resp = await fetch(url, { signal: abortController.signal });\r\n            if (!resp.ok) {\r\n                throw new Error(`Failed to fetch file size: ${resp.statusText}`);\r\n            }\r\n            const contentLength = +resp.headers.get('Content-Length');\r\n            if (isNaN(contentLength)) {\r\n                throw new Error('Content-Length header is missing or invalid');\r\n            }\r\n            abortController.abort();\r\n            return contentLength;\r\n        },\r\n        async doPreview() {\r\n            this.file = (this.mode === 'local') && this.$refs.filebox.files?.[0];\r\n            if (!this.file && this.mode === 'local') {\r\n                alert('请选择一个文件');\r\n                return;\r\n            }\r\n            try {\r\n                this.$refs.dlg.showModal();\r\n                this.shouldCreate = true;\r\n                const fileReader = (this.mode === 'local') ? async (start, end) => {\r\n                    const blob = this.file.slice(start, end);\r\n                    return new Uint8Array(await blob.arrayBuffer());\r\n                } : async (start, end, signal) => {\r\n                    const resp = await fetch(this.fileUrl, {\r\n                        headers: {\r\n                            'Range': `bytes=${start}-${end - 1}`\r\n                        },\r\n                        method: 'GET',\r\n                        signal\r\n                    });\r\n                    return new Uint8Array(await resp.arrayBuffer());\r\n                };\r\n                await new Promise((resolve, reject) => {\r\n                    this.$nextTick(() => this.$nextTick(resolve));\r\n                })\r\n                const filename = (this.type === 'docx') ? 'File.docx' : 'File';\r\n                await this.$refs.preview.load(fileReader, this.password,\r\n                    this.mode === 'local' ? this.file.size : await this.getFileSize(this.fileUrl),\r\n                    this.type, filename);\r\n            } catch (e) {\r\n                console.error(e);\r\n                alert(e);\r\n                this.$refs.dlg.close();\r\n                this.shouldCreate = false;\r\n            }\r\n        },\r\n        closeDialog() {\r\n            this.$refs.dlg.close();\r\n            this.shouldCreate = false;\r\n        },\r\n        handleDialogClose() {\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.file-preview  {\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n}\r\n\r\n.mode-selector {\r\n    display: flex;\r\n    gap: 20px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.mode-selector label {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n}\r\n\r\ninput[type=\"file\"] {\r\n    width: 100%;\r\n    margin-bottom: 10px;\r\n}\r\n\r\ninput:not([type=\"file\"]):not([type=\"radio\"]), select {\r\n    width: 100%;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbutton {\r\n    width: 100%;\r\n    padding: 10px;\r\n    background: #2c3e50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton:disabled {\r\n    background: #cccccc;\r\n    cursor: not-allowed;\r\n}\r\n\r\nbutton:not(:disabled):hover {\r\n    background: #1a2a3a;\r\n}\r\n\r\ndialog:not(:modal) {\r\n    display: none !important;\r\n}\r\n\r\nsimple-data-crypto-file-preview {\r\n    text-align: left;\r\n}\r\n</style>"],"names":["HTMLSimpleDataCryptoFilePreviewElement","#shadow","#preview","#ctx","#cleanup","style","crypt_context_destroy","fileReader","password","size","type","fileName","blob","decryptedBlob","decrypt_blob","url","np","crypt_context_create","stream","InputStream","decrypt_stream_init","PlayMp4Video","start","end","controller","decrypt_stream","version","_sfc_main","ext","abortController","resp","contentLength","signal","resolve","reject","filename","e","_hoisted_1","_hoisted_3","_createElementBlock","$options","args","_createElementVNode","_cache","$event","$data","_createTextVNode","_openBlock","_hoisted_2","_createCommentVNode","_withModifiers","_createStaticVNode","_hoisted_4"],"mappings":"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","x_google_ignoreList":[0]}