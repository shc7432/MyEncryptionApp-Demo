{"version":3,"file":"VideoDecryption-Dt0Xyq39.js","sources":["../../src/views/VideoDecryption.vue"],"sourcesContent":["<template>\r\n    <div class=\"video-decrypt-container\">\r\n        <div class=\"mode-selector\">\r\n            <label>\r\n                <input type=\"radio\" v-model=\"mode\" value=\"local\" /> 本地文件\r\n            </label>\r\n            <label>\r\n                <input type=\"radio\" v-model=\"mode\" value=\"remote\" /> 在线文件\r\n            </label>\r\n        </div>\r\n        \r\n        <input v-if=\"mode === 'local'\" type=\"file\" ref=\"filebox\" />\r\n        <input v-if=\"mode === 'remote'\" type=\"text\" v-model=\"fileUrl\" placeholder=\"输入视频URL\" />\r\n        <input autocomplete=\"off\" type=\"password\" v-model=\"password\" placeholder=\"输入解密密码\" />\r\n        <button @click=\"playVideo\" :disabled=\"(mode === 'local') || (!fileUrl && mode === 'remote') || playing\">播放视频</button>\r\n\r\n        <dialog style=\"width: 100%; height: 100%; display: flex; flex-direction: column;\" ref=\"videoDialog\" @close=\"handleDialogClose\">\r\n            <video v-if=\"playing\" ref=\"videoPlayer\" controls style=\"flex: 1;\"></video>\r\n            <button @click=\"closeDialog\" style=\"margin-top: 0.5em;\">关闭</button>\r\n        </dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { InputStream as Stream, crypt_context_create, crypt_context_destroy, decrypt_stream_init, decrypt_stream } from 'simple-data-crypto/builder';\r\nimport { PlayMp4Video } from 'play-video-streamed';\r\n\r\nexport default {\r\n    name: 'VideoDecryption',\r\n    data() {\r\n        return {\r\n            ctx: null,\r\n            file: null,\r\n            fileUrl: '',\r\n            password: '',\r\n            playing: false,\r\n            cleanup: null,\r\n            mode: 'local',\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        async getFileSize(url) {\r\n            const abortController = new AbortController();\r\n            const resp = await fetch(url, { signal: abortController.signal });\r\n            if (!resp.ok) {\r\n                throw new Error(`Failed to fetch file size: ${resp.statusText}`);\r\n            }\r\n            const contentLength = +resp.headers.get('Content-Length');\r\n            if (isNaN(contentLength)) {\r\n                throw new Error('Content-Length header is missing or invalid');\r\n            }\r\n            abortController.abort();\r\n            return contentLength;\r\n        },\r\n        async playVideo() {\r\n            this.file = this.$refs.filebox.value?.[0];\r\n            if (!this.file && this.mode === 'local') {\r\n                alert('请选择一个视频文件');\r\n                return;\r\n            }\r\n            try {\r\n                this.playing = true;\r\n                await this.$nextTick(); // Wait for DOM update\r\n\r\n                const ctx = await crypt_context_create();\r\n                this.ctx = ctx;\r\n\r\n                let file = (this.mode === 'local') ? this.file : ({ size: await this.getFileSize(this.fileUrl) });\r\n                const fileReader = (this.mode === 'local') ? async (start, end) => {\r\n                    const blob = file.slice(start, end);\r\n                    return new Uint8Array(await blob.arrayBuffer());\r\n                } : async (start, end, signal) => {\r\n                    const resp = await fetch(this.fileUrl, {\r\n                        headers: {\r\n                            'Range': `bytes=${start}-${end - 1}`\r\n                        },\r\n                        method: 'GET',\r\n                        signal\r\n                    });\r\n                    return new Uint8Array(await resp.arrayBuffer());\r\n                };\r\n\r\n                const key = this.password;\r\n\r\n                await decrypt_stream_init(ctx, new Stream((start, end, signal) => {\r\n                    return fileReader(start, end, signal)\r\n                }, file.size), key);\r\n                // console.log('ctx=', ctx);\r\n\r\n                const video = this.$refs.videoPlayer;\r\n                video.controls = true;\r\n                video.playsInline = true;\r\n\r\n                this.cleanup = await PlayMp4Video(video, (async (start, end, controller) => {\r\n                    const buffer = await decrypt_stream(ctx, start, end, controller);\r\n                    return buffer;\r\n                }));\r\n\r\n                this.$refs.videoDialog.showModal();\r\n            } catch (e) {\r\n                console.error(e);\r\n                alert(e);\r\n                this.playing = false;\r\n            }\r\n        },\r\n        closeDialog() {\r\n            this.$refs.videoDialog.close();\r\n        },\r\n        handleDialogClose() {\r\n            this.playing = false;\r\n            if (this.cleanup) {\r\n                this.cleanup();\r\n                this.cleanup = null;\r\n            }\r\n            crypt_context_destroy(this.ctx);\r\n            // console.log('ctx destroy', this.ctx);\r\n            this.ctx = null;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.video-decrypt-container {\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n}\r\n\r\n.mode-selector {\r\n    display: flex;\r\n    gap: 20px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.mode-selector label {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n}\r\n\r\ninput[type=\"file\"] {\r\n    width: 100%;\r\n    margin-bottom: 10px;\r\n}\r\n\r\ninput:not([type=\"file\"]):not([type=\"radio\"]) {\r\n    width: 100%;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n}\r\n\r\nbutton {\r\n    width: 100%;\r\n    padding: 10px;\r\n    background: #2c3e50;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton:disabled {\r\n    background: #cccccc;\r\n    cursor: not-allowed;\r\n}\r\n\r\nbutton:not(:disabled):hover {\r\n    background: #1a2a3a;\r\n}\r\n\r\ndialog:not(:modal) {\r\n    display: none !important;\r\n}\r\n\r\nvideo {\r\n    background: black;\r\n}\r\n</style>"],"names":["_sfc_main","url","abortController","resp","contentLength","ctx","crypt_context_create","file","fileReader","start","end","blob","signal","key","decrypt_stream_init","Stream","video","PlayMp4Video","controller","decrypt_stream","e","crypt_context_destroy","_hoisted_1","_hoisted_2","_hoisted_4","_openBlock","_createElementBlock","_createElementVNode","_cache","$event","$data","_createTextVNode","_hoisted_3","_createCommentVNode","$options","args","_hoisted_5"],"mappings":"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"}